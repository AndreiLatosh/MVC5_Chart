@model WebApplication3.Models.UserData

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@ViewBag.Message</h2>
<p>График функции</p>
<p>f(x) = <b>A</b>x^2 + <b>B</b>x + <b>C</b></p>

<div>
    @using (Ajax.BeginForm("InputData", new AjaxOptions
    {
        OnSuccess = "OnSuccess",
        UpdateTargetId = "results",       
    }))
    {
        @Html.ValidationSummary(true)

        <div class="editor-label">
            @Html.LabelFor(model => model.A)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.A, new { @Value = "5" })
            @Html.ValidationMessageFor(model => model.A)
        </div>
        <br />
        <div class="editor-label">
            @Html.LabelFor(model => model.B)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.B, new { @Value = "5" })
            @Html.ValidationMessageFor(model => model.B)
        </div>
        <br />
        <div class="editor-label">
            @Html.LabelFor(model => model.C)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.C, new { @Value = "16" })
            @Html.ValidationMessageFor(model => model.C)
        </div>
        <br />
        <div class="editor-label">
            @Html.LabelFor(model => model.RangeFrom)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.RangeFrom, new { @Value = "-10" })
            @Html.ValidationMessageFor(model => model.RangeFrom)
        </div>
        <br />
        <div class="editor-label">
            @Html.LabelFor(model => model.RangeTo)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.RangeTo, new { @Value = "10" })
            @Html.ValidationMessageFor(model => model.RangeTo)
        </div>
        <br />
        <div class="editor-label">
            @Html.LabelFor(model => model.Step)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Step, new { @Value = "1" })
            @Html.ValidationMessageFor(model => model.Step)
        </div>
        <br />

        <br />

        <input type="submit" value="Поcтроить" />
    }
    <div id="results">
    </div>
</div>

<canvas id="myChart" width="600" height="400"></canvas>


<script type="text/javascript">
    function OnSuccess(jsonPoints) {
        if (jsonPoints[0].X === undefined) return;
        var ctx = document.getElementById('myChart').getContext('2d');
        var myChart = new Chart(ctx, {
            // The type of chart we want to create
            type: 'line',

            // The data for our dataset
            data: {
                labels: [],
                datasets: [{
                    label: "f(x)",
                    borderColor: 'rgb(255, 99, 132)',
                    data: [],
                    fill: false
                }]
            },

            // Configuration options go here
            options: {
                responsive: false, //Вписывать в размер canvas
                scales: {
                    xAxes: [{
                        display: true
                    }],
                    yAxes: [{
                        display: true
                    }]
                }
            }
        });

        for (let i = 0; i < jsonPoints.length; i++) {
            myChart.data.labels.push(jsonPoints[i].X);
            myChart.data.datasets[0].data.push(jsonPoints[i].Y);
        }
        //Обновляем
        myChart.update();
    }
</script>

@section Scripts {
    @Scripts.Render("~/scripts/jquery-3.4.1.js")
    @Scripts.Render("~/scripts/jquery.unobtrusive-ajax.js")
    @Scripts.Render("~/scripts/Chart.js")
    @Scripts.Render("~/bundles/jqueryval")
}